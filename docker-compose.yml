version: '3'
services:
  db:
    image: postgres:14.2
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/data/postgres

  web:
    build:
      context: .
      args:
        REQUIREMENTS_FILE: dev.txt
    restart: always
    ports:
      - "8000:8000"
    env_file: .env
    command: 'sh -c "cp ./manage.py migrate && ./manage.py runserver 0.0.0.0:8000"'
    volumes:
      - ./:/app
    depends_on:
      - db

  queue:
    image: bhealth-mvp-backend_web:latest
    restart: always
    env_file: .env
    command: sh /entrypoint-queue.sh && sh -c "python3 bhealthapp/rabbitmq.py && python3 bhealthapp/consumers.py"
    volumes:
        - ./:/app

  beat:
    image: bhealth-mvp-backend_web:latest
    restart: always
    env_file: .env
    command: sh /entrypoint-beat.sh
    volumes:
          - ./:/app
    depends_on:
          - web
          - db
          - redis

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"

  flower:
    image: bhealth-mvp-backend_web:latest
    command: 'sh -c "celery -A bhealthapp && python3 -m celery worker"'
    volumes:
      - ./:/app
    ports:
      - "5555:5555"
    env_file: .env
    depends_on:
      - queue
      - redis

volumes:
  db-data: